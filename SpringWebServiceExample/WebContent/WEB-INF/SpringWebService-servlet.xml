<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:util="http://www.springframework.org/schema/util" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd">

	<context:annotation-config />
 	<context:component-scan base-package="com.raj.beans"/>
 	<context:component-scan base-package="com.raj.dto"/>
 	<context:component-scan base-package="com.raj.util"/>
 	<context:component-scan base-package="com.raj.chart.controller"/>
 	<context:component-scan base-package="com.raj.chart.service"/>
 	<context:component-scan base-package="com.raj.chart.serviceImpl"/>
 	<context:component-scan base-package="com.raj.chart.dao"/>
 	<context:component-scan base-package="com.raj.chart.daoImpl"/>
 	<context:component-scan base-package="com.raj.employee.controller"/>
 	<context:component-scan base-package="com.raj.employee.service"/>
 	<context:component-scan base-package="com.raj.employee.serviceImpl"/>
 	<context:component-scan base-package="com.raj.employee.dao"/>
 	<context:component-scan base-package="com.raj.employee.daoImpl"/>
 	
 	<context:property-placeholder location="classpath:hibernate.properties" />
 	<!-- 
 	<bean id="propertyConfigurer" class="com.raj.util.PropertyFileConfigurer"
		scope="singleton" lazy-init="false">
		<property name="fileName" value="hibernate.properties" />
		
	</bean>
 	 -->
		
	<!-- 		
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	<property name="driverClassName" value="${jdbc.connection.driver_class}"></property>
	<property name="url" value="${jdbc.connection.url}"></property>
	<property name="username" value="${jdbc.connection.username}"></property>
	<property name="password" value="${jdbc.connection.password}"></property>
	</bean>
	 
    <bean id="sessionFactory"
        class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation">
            <value>classpath:hibernate.cfg.xml</value>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2dll.auto}</prop>
            </props>
        </property>
    </bean>
     -->
     
     <!-- Connection Pooling Configuration Starts-->
     
     <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
     	<!-- Database Connection -->
		<property name="driverClass" value="${jdbc.connection.driver_class}" />
		<property name="jdbcUrl" value="${jdbc.connection.url}" />
		<property name="user" value="${jdbc.connection.username}"></property>
		<property name="password" value="${jdbc.connection.password}"></property>
		
		<!-- Connection Pooling -->
		<property name="acquireIncrement" value="${hibernate.c3p0.acquire_increment}"></property>
		<property name="minPoolSize" value="${hibernate.c3p0.min_size}"></property>
		<property name="maxPoolSize" value="${hibernate.c3p0.max_size}"></property>
		<property name="idleConnectionTestPeriod" value="${hibernate.c3p0.idle_test_period}"></property>
		<property name="initialPoolSize" value="${hibernate.c3p0.initialPoolSize}"></property>
		<property name="loginTimeout" value="${hibernate.c3p0.timeout}"></property>
		<property name="maxIdleTimeExcessConnections" value="${hibernate.c3p0.maxIdleTimeExcessConnections}"></property>
	</bean>
	<!-- <bean id="cacheRowSetImpl" class="com.sun.rowset.CachedRowSetImpl"/> -->  
	
	<bean class="org.springframework.orm.hibernate5.LocalSessionFactoryBean" id="sessionFactory">
		<property name="dataSource" ref="dataSource" />
		
		<property name="configLocation">
            <value>classpath:hibernate.cfg.xml</value>
        </property>
        
		
		<property name="annotatedClasses">
	  		<list>
	   			<value>com.raj.beans.CityBean</value>
	   			<value>com.raj.beans.CountryBean</value>
	   			<value>com.raj.beans.EmployeeBean</value>
	   			<value>com.raj.beans.DepartmentBean</value>
	  		</list>
 		</property> 
 		
	 	<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.hbm2dll.auto">${hibernate.hbm2dll.auto}</prop>
				<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
				<prop key="hibernate.order_updates">${hibernate.order_updates}</prop>
				<prop key="hibernate.jdbc.batch_versioned_data">${hibernate.jdbc.batch_versioned_data}</prop>
				<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
				<prop key="hibernate.connection.autocommit">${hibernate.connection.autocommit}</prop>
				<prop key="hibernate.connection.isolation">1</prop>
				<prop key="hibernate.order_inserts">true</prop>
			</props>
		</property>
	</bean>
	
     <!-- Connection Pooling Configuration Ends-->
     
    <tx:annotation-driven />
    <tx:annotation-driven transaction-manager="transactionManager"/>
 
    <bean id="transactionManager"
        class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>		

 </beans>